@import './config/color.scss';
@import './config/variable.scss';

.ka-switch {
  position: relative;
  display: inline-flex;
  align-items: center;
  vertical-align: middle;
  cursor: pointer;

  $root: selector-parse(&);

  & + & {
    margin-left: $gap;
  }

  &__input {
    opacity: 0;
    height: 100%;
    width: 100%;
    position: absolute;
    z-index: 1;
    cursor: pointer;

    &:focus + #{$root}__inner {
      @include focus-shadow();
    }
  }

  /* base style */
  &__inner {
    z-index: 0;
    position: relative;
    display: inline-block;
    background-color: $gray-300;
    box-sizing: border-box;
  }

  &__slider {
    position: absolute;
    background-color: #fff;
    transform: translate(0, 0);
    transition: all 150ms ease-out;
  }

  &.#{prefix(is-disabled)} {
    cursor: not-allowed;
  }

  /* size */
  @mixin default-size($size, $padding) {
    $height: $size - 12px;
    $width: $height * 1.6;

    height: $height;
    width: $width;
    margin-top: 6px;
    margin-bottom: 6px;

    #{$root}__inner {
      height: $height;
      width: $width;
      border-radius: $height / 2;
      padding: $padding;
    }

    $slider-width: $height - (2 * $padding);
    #{$root}__slider {
      height: $slider-width;
      width: $slider-width;
      border-radius: $slider-width/2;
    }

    &.#{prefix(is-checked)} {
      #{$root}__slider {
        transform: translate(($width - (2 * $padding) - $slider-width), 0);
      }
    }
  }

  @mixin size-type($size, $height, $padding) {
    &.#{prefix(size-#{$size})} {
      @include default-size($height, $padding);
    }
  }

  @include default-size($sm-height, 2px);
  @include size-type(xs, $xs-height, 2px);
  @include size-type(sm, $sm-height, 2px);
  @include size-type(md, $md-height, 2px);
  @include size-type(lg, $lg-height, 2px);

  /* color type */
  @mixin default-type($bg) {
    &__inner {
      background-color: $gray-300;
    }

    &.#{prefix(is-disabled)} {
      #{$root}__inner {
        background-color: mix($gray-300, $white, 60);
      }
    }

    &.#{prefix(is-checked)} {
      #{$root}__inner {
        background-color: $bg;
      }

      &.#{prefix(is-disabled)} {
        #{$root}__inner {
          background-color: mix($bg, $white, 40);
        }
      }
    }
  }

  @mixin type($type, $bg) {
    &.#{prefix(type-#{$type})} {
      @include default-type($bg);
    }
  }

  @include default-type($primary);
  @include type(primary, $primary);
  @include type(success, $success);
  @include type(warning, $warning);
  @include type(danger, $error);
}
